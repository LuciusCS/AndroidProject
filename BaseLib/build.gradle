//moudle在开发阶段为application，在release后才是library
//if (isDebug.toBoolean()) {
   apply plugin: 'com.android.application'
//} else {
//    apply plugin: 'com.android.library'
//}




android {
    compileSdkVersion 28
    defaultConfig {
        //moudle作为library不能用applicationID
//        if (isDebug.toBoolean()) {
            applicationId "demo.lucius.baselib"
//        }
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    //用于在Debug模式下使用正式签名
    signingConfigs {
        release {
            //.jks文件放在项目目录（app目录）
//            storeFile file("H:/Project/Github/AndroidProject/BaseLib/baselib.jks")//签名文件名
//            storePassword"123456lL"//密码
//            keyAlias"key1"//别名
//            keyPassword"123456lL"//密码

        }

        debug {
//            storeFile file("H:/Project/Github/AndroidProject/BaseLib/baselib.jks")
//            storePassword"123456lL"
//            keyAlias"key1"//别名
//            keyPassword"123456lL"
//            ext.enableCrashlytics = false
//            ext.alwaysUpdateBuildId = false
        }
    }

    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
//        }
//        debug {
//            signingConfig signingConfigs.release
//
//        }
    }

    dataBinding {
        enabled = true
    }

    //moudle在引用的时候，设置AndroidManifest入口类，release后这个AndroidManifest不需要打包进去，新建文件debug指定路径
    sourceSets {
//        main {
//            if (isDebug.toBoolean()) {
//                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
//            } else {
//                manifest.srcFile 'src/main/release/AndroidManifest.xml'
//                java {
//                    //release 时 debug 目录下文件不需要合并到主工程
//                    exclude 'debug/**'
//                }
//            }
//        }

    }

//    引入JNI
    externalNativeBuild {
        cmake {
            version "3.18.1"
            path file('src/main/cpp/CMakeLists.txt')
        }
    }




}

dependencies {
    def work_version = '2.2.0'
    def lifecycle_version = '2.2.0-alpha03'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:exifinterface:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.android.support:design:28.0.0'

    //用于引入Dagger2
    implementation 'com.google.dagger:dagger-android:2.17'
    implementation 'com.google.dagger:dagger-android-support:2.17' // if you use the support libraries
    implementation 'com.google.dagger:dagger:2.17'
    //用于引入viewmodule

    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //用于引入Utils
    implementation project(":UtilsLib")

    //引入Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    //使用OkHttp官方拦截器打印请求以及返回结果
    implementation 'com.squareup.okhttp3:logging-interceptor:3.3.1'

}
